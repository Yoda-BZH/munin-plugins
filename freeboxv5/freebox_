#!/bin/bash

if [ ! -z "$MUNIN_LIBDIR" ]
then
    . $MUNIN_LIBDIR/plugins/plugin.sh
fi

page="http://mafreebox.freebox.fr/pub/fbx_info.txt"
tmpfile="/tmp/munin_freebox_stats"
action=$1

## adding getopt to be able to run the raw script with --run to test a feature
opts=$(getopt -o r: -l run: -- "$@")
eval set -- $opts


module=$(echo $0 | cut -d_ -f 2)

## Override for testing purpose
while [ $# -gt 1 ]
do
    case "$1" in
        --run|-r)
            module=$2
            shift 2
            ;;
        *)
            shift
            break
            ;;
        --)
            shift
            break
            ;;
    esac
done


########################
## uptime
########################

function config_uptime {
    ## code from /etc/munin/plugins/uptime
    ## Contributed by Nicolas Salles
    ## GPLv2
    echo 'graph_title Uptime'
    echo 'graph_args --base 1000 -l 0 '
    echo 'graph_scale no'
    echo 'graph_vlabel uptime in days'
    echo 'graph_category freebox'
    echo 'freeboxuptime.label uptime'
    echo 'freeboxuptime.draw AREA'
    print_warning freeboxuptime
    print_critical freeboxuptime
    exit 0
}

function run_uptime {
    line=$(grep "Temps depuis la mise en route" $tmpfile)
    uptime=$(echo $line | awk '{ print (($7 * 84600) + ($9 * 3600) + ($11 * 60))/86400 }')
    echo "freeboxuptime.value $uptime"
}



########################
## debit atm
########################

function config_debitatm {
    echo 'graph_category freebox'
    echo 'graph_title Debit ATM'
    echo "debitatmup.label Up"
    echo "debitatmdown.label Down"
}

function run_debitatm {
    ## grmbl accents ...
    line=$(grep "bit ATM" $tmpfile)
    down=$(echo $line | awk '{ print $3 }')
    up=$(echo $line | awk '{ print $5 }')

    echo "debitatmup.value $up"
    echo "debitatmdown.value $down"
}



########################
## marge de bruit
########################

function config_margebruit {
    echo 'graph_category freebox'
    echo 'graph_title Marge de bruit'
    echo "margebruitup.label Up"
    echo "margebruitdown.label Down"
}

function run_margebruit {
    line=$(grep "Marge de bruit" $tmpfile)
    down=$(echo $line | awk '{ print $4 }')
    up=$(echo $line | awk '{ print $6 }')

    echo "margebruitup.value $up"
    echo "margebruitdown.value $down"
}



########################
## atténuation
########################

function config_attenuation {
    echo 'graph_category freebox'
    echo 'graph_title Attenuation'
    echo "attenuationup.label Up"
    echo "attenuationdown.label Down"
}

function run_attenuation {
    line=$(grep "nuation" $tmpfile)
    down=$(echo $line | awk '{ print $2 }')
    up=$(echo $line | awk '{ print $4 }')

    echo "attenuationup.value $up"
    echo "attenuationdown.value $down"
}



########################
## fec
########################

function config_FEC {
    echo 'graph_category freebox'
    echo 'graph_title FEC'
    echo "FECup.label Up"
    echo "FECdown.label Down"
}

function run_FEC {
    line=$(grep "FEC" $tmpfile)
    down=$(echo $line | awk '{ print $2 }')
    up=$(echo $line | awk '{ print $3 }')

    echo "FECup.value $up"
    echo "FECdown.value $down"
}



########################
## crc
########################

function config_CRC {
    echo 'graph_category freebox'
    echo 'graph_title CRC'
    echo "CRCup.label Up"
    echo "CRCdown.label Down"
}
function run_CRC {
    line=$(grep "CRC" $tmpfile)
    down=$(echo $line | awk '{ print $2 }')
    up=$(echo $line | awk '{ print $3 }')

    echo "CRCup.value $up"
    echo "CRCdown.value $down"
}


########################
## hec
########################

function config_HEC {
    echo 'graph_category freebox'
    echo 'graph_title HEC'
    echo "HECup.label Up"
    echo "HECdown.label Down"
}

function run_HEC {
    line=$(grep "HEC" $tmpfile)
    down=$(echo $line | awk '{ print $2 }')
    up=$(echo $line | awk '{ print $3 }')

    echo "HECup.value $up"
    echo "HECdown.value $down"
}


########################
## Debit wan
########################

function config_debitwan {
    echo 'graph_category freebox'
    echo 'graph_title Debit WAN'
    echo "debitwanup.label Up"
    echo "debitwandown.label Down"
}

function run_debitwan {
    line=$(grep "WAN" $tmpfile)
    down=$(echo $line | awk '{ print $3 }')
    up=$(echo $line | awk '{ print $5 }')

    echo "debitwanup.value $up"
    echo "debitwandown.value $down"
}



########################
## Debit ethernet
########################

function config_debitethernet {
    echo 'graph_category freebox'
    echo 'graph_title Debit Ethernet'
    echo "debitethernetup.label Up"
    echo "debitethernetdown.label Down"

function run_debitethernet {
    line=$(grep "Ethernet" $tmpfile)
    down=$(echo $line | awk '{ print $3 }')
    up=$(echo $line | awk '{ print $5 }')

    echo "debitethernetup.value $up"
    echo "debitethernetdown.value $down"
}



########################
## Debit usb
########################

function config_debitusb {
    echo 'graph_category freebox'
    echo 'graph_title Debit USB'
    echo "debitusbup.label Up"
    echo "debitusbdown.label Down"
}

function run_debitusb {
    line=$(grep "USB" $tmpfile)
    is_connected=$(echo $line | grep 'Non connect')
    if [ ! -z "$is_connected" ]
    then
        echo "debitusbup.value 0"
        echo "debitusbdown.value 0"
    else

        down=$(echo $line | awk '{ print $3 }')
        up=$(echo $line | awk '{ print $5 }')

        echo "debitusbup.value $up"
        echo "debitusbdown.value $down"
    fi
}



########################
## Debit switch
########################

function config_debitswitch {
    echo 'graph_category freebox'
    echo 'graph_title Debit Switch'
    echo "debitswitchup.label Up"
    echo "debitswitchdown.label Down"
}

function run_debitswitch {
    line=$(grep "Switch" $tmpfile)
    down=$(echo $line | awk '{ print $3 }')
    up=$(echo $line | awk '{ print $5 }')

    echo "debitswitchup.value $up"
    echo "debitswitchdown.value $down"
}






case "$action" in
    config)
        case "$module" in
            uptime)
                config_uptime
                ;;
            debitatm)
                config_debitatm
                ;;
            margebruit)
                config_margebruit
                ;;
            attenuation)
                config_attenuation
                ;;
            FEC)
                config_FEC
                ;;
            CRC)
                config_CRC
                ;;
            HEC)
                config_HEC
                ;;
            debitwan)
                config_debitwan
                ;;
            debitethernet)
                config_debitethernet
                ;;
            debitusb)
                config_debitusb
                ;;
            debitswitch)
                config_debitswitch
                ;;
            '')
                echo "Module non spécifié."
                echo "Utiliser --run <module> pour tester un module"
                exit 3
                ;;
            *)
                echo "Module '$module' non pris en charge."
                exit 1
                ;;
        esac
        ;;
    *)
        wget -q -O $tmpfile $page
        if [ $? -ne 0 ]
        then
            echo "Error while fetching '$page'"
            exit 2
        fi

        case "$module" in
            uptime)
                run_uptime
                ;;
            debitatm)
                run_debitatm
                ;;
            margebruit)
                run_margebruit
                ;;
            attenuation)
                run_attenuation
                ;;
            FEC)
                run_FEC
                ;;
            CRC)
                run_CRC
                ;;
            HEC)
                run_HEC
                ;;
            debitwan)
                run_debitwan
                ;;
            debitethernet)
                run_debitethernet
                ;;
            debitusb)
                run_debitusb
                ;;
            debitswitch)
                run_debitswitch
                ;;
            *)
                echo "Module '$module' non pris en charge."
                exit 1
        esac
        ;;
esac


if [ -f $tmpfile ]
then
    rm $tmpfile
fi
exit 0
